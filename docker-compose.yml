services:
  # --- FRONTEND ---
  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - catalogo_api
      - usuarios_api
      - carrinho_api

  # --- BACKEND (APIs) ---
  catalogo_api:
    build: ./services/catalogo
    ports:
      - "3000:3000"
    environment:
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_SSL: ${DB_SSL}

  usuarios_api:
    build: ./services/usuarios
    ports:
      - "3001:3000"
    environment:
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      DB_SSL: ${DB_SSL}

  carrinho_api:
    build: ./services/carrinho
    ports:
      - "3002:3000"
    environment:
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_SSL: ${DB_SSL}
    depends_on:
      - usuarios_api
      - catalogo_api

  # --- FERRAMENTAS ---
  catalogo_migrator:
    build: ./services/catalogo
    profiles: ["tools"]
    environment:
      DB_HOST: ${DB_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_SSL: ${DB_SSL}
    command: ["npm", "run", "migrate:up"]